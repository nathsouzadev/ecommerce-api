# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Production
on:
  push:
    branches:
      - main

env:
  ## Sets environment variable
  PORT: 5000
  DATABASE_URL: 'postgresql://postgres:p4ssw0rd-t3st3-db@localhost:5010/postgres'

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

        # ESLint and Prettier must be in `package.json`
      - name: Install dependencies
        run: npm install

      - name: Run lint
        run: npm run lint

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm run test

  integration:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Creating network
        run: docker network create "microservice-network"

      - name: Build docker-composer
        run: docker-compose up -d

      - name: Check running container
        run: docker ps -a

      - name: Install dependencies
        run: npm install

      - name: Create tables
        run: npx prisma migrate dev --name ci --schema=./src/config/prisma/schema.prisma

      - name: Seed database
        run: npm run seed:db

      - name: Running integration tests
        run: npm run test:e2e

  stage:
    if: needs.test.result == 'success' && needs.e2e.result == 'success' && ${{ github.ref }} == 'refs/heads/main'
    needs:
      - test
      - integration
    runs-on: ubuntu-latest

    steps:
      - uses: JorgeLNJunior/render-deploy@v1.3.2
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}
          clear_cache: true
          wait_deploy: true
